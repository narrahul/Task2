{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskListComponent = void 0;\nvar common_1 = require(\"@angular/common\");\nvar forms_1 = require(\"@angular/forms\");\nvar i0 = require(\"@angular/core\");\nvar i1 = require(\"../services/task.service\");\nvar i2 = require(\"@angular/common\");\nvar i3 = require(\"@angular/forms\");\nvar _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction TaskListComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 35);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_span_10_Template_span_click_2_listener() {\n      i0.ɵɵrestoreView(_r1);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clearFilters(\"task_type\"));\n    });\n    i0.ɵɵtext(3, \"x\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"Task Type: \", ctx_r1.filters.task_type, \" \");\n  }\n}\nfunction TaskListComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var type_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(type_r3);\n  }\n}\nfunction TaskListComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var person_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", person_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(person_r4);\n  }\n}\nfunction TaskListComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r1.alert.type === \"success\" ? \"alert-success\" : \"alert-error\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.alert.message, \" \");\n  }\n}\nfunction TaskListComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \"Loading tasks...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_table_77_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"span\", 42);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\")(15, \"span\", 43);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"div\", 44)(19, \"button\", 45);\n    i0.ɵɵtext(20, \"Options\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 46)(22, \"a\", 47);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_table_77_tr_34_Template_a_click_22_listener($event) {\n      var task_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      var ctx_r1 = i0.ɵɵnextContext(2);\n      ctx_r1.editTask(task_r6);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtext(23, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"a\", 47);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_table_77_tr_34_Template_a_click_24_listener($event) {\n      var task_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      var ctx_r1 = i0.ɵɵnextContext(2);\n      ctx_r1.duplicateTask(task_r6);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtext(25, \"Duplicate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"a\", 47);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_table_77_tr_34_Template_a_click_26_listener($event) {\n      var task_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      var ctx_r1 = i0.ɵɵnextContext(2);\n      ctx_r1.toggleStatus(task_r6);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"a\", 47);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_table_77_tr_34_Template_a_click_28_listener($event) {\n      var task_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      var ctx_r1 = i0.ɵɵnextContext(2);\n      ctx_r1.deleteTask(task_r6);\n      return i0.ɵɵresetView($event.preventDefault());\n    });\n    i0.ɵɵtext(29, \"Delete\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    var task_r6 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatDate(task_r6.date_created));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.entity_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", \"task-type-\" + task_r6.task_type.toLowerCase());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r6.task_type, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formatTime(task_r6.task_time));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.contact_person);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(task_r6.note || \"-\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", \"status-\" + task_r6.status);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", task_r6.status, \" \");\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate1(\"Change Status to \", task_r6.status === \"open\" ? \"Closed\" : \"Open\", \"\");\n  }\n}\nfunction TaskListComponent_table_77_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 39)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date \");\n    i0.ɵɵelementStart(5, \"span\", 40);\n    i0.ɵɵtext(6, \"\\uD83D\\uDCC5\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Entity Name \");\n    i0.ɵɵelementStart(9, \"span\", 40);\n    i0.ɵɵtext(10, \"\\u25BC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Task Type \");\n    i0.ɵɵelementStart(13, \"span\", 40);\n    i0.ɵɵtext(14, \"\\u25BC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Time \");\n    i0.ɵɵelementStart(17, \"span\", 40);\n    i0.ɵɵtext(18, \"\\u25BC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"Contact Person \");\n    i0.ɵɵelementStart(21, \"span\", 40);\n    i0.ɵɵtext(22, \"\\u25BC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"th\");\n    i0.ɵɵtext(24, \"Notes \");\n    i0.ɵɵelementStart(25, \"span\", 40);\n    i0.ɵɵtext(26, \"\\u25BC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"th\");\n    i0.ɵɵtext(28, \"Status \");\n    i0.ɵɵelementStart(29, \"span\", 40);\n    i0.ɵɵtext(30, \"\\u25BC\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"th\");\n    i0.ɵɵtext(32, \"Options\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(33, \"tbody\");\n    i0.ɵɵtemplate(34, TaskListComponent_table_77_tr_34_Template, 30, 10, \"tr\", 41);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(34);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n  }\n}\nfunction TaskListComponent_div_78_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtext(1, \" No tasks found. Create a new task to get started. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TaskListComponent_div_79_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var hour_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", hour_r8);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(hour_r8);\n  }\n}\nfunction TaskListComponent_div_79_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var minute_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", minute_r9);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(minute_r9);\n  }\n}\nfunction TaskListComponent_div_79_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    var type_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r10);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(type_r10);\n  }\n}\nfunction TaskListComponent_div_79_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_79_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeModal());\n    });\n    i0.ɵɵelementStart(1, \"div\", 49);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_79_Template_div_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      return i0.ɵɵresetView($event.stopPropagation());\n    });\n    i0.ɵɵelementStart(2, \"div\", 50)(3, \"h3\", 51);\n    i0.ɵɵtext(4, \"NEW TASK\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 52)(6, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_79_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.taskForm.status = \"open\");\n    });\n    i0.ɵɵtext(7, \"Open\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_79_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.taskForm.status = \"closed\");\n    });\n    i0.ɵɵtext(9, \"Closed\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"button\", 54);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_79_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeModal());\n    });\n    i0.ɵɵtext(11, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"form\", 55);\n    i0.ɵɵlistener(\"ngSubmit\", function TaskListComponent_div_79_Template_form_ngSubmit_12_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.saveTask());\n    });\n    i0.ɵɵelementStart(13, \"div\", 10)(14, \"label\", 11);\n    i0.ɵɵtext(15, \"Entity name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 56);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.entity_name, $event) || (ctx_r1.taskForm.entity_name = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 57)(18, \"label\", 11);\n    i0.ɵɵtext(19, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"input\", 58);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_input_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.task_date, $event) || (ctx_r1.taskForm.task_date = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"label\", 11);\n    i0.ɵɵtext(22, \"Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"select\", 59);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_select_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.task_time_hour, $event) || (ctx_r1.taskForm.task_time_hour = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵtemplate(24, TaskListComponent_div_79_option_24_Template, 2, 2, \"option\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"select\", 60);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_select_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.task_time_minute, $event) || (ctx_r1.taskForm.task_time_minute = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵtemplate(26, TaskListComponent_div_79_option_26_Template, 2, 2, \"option\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"select\", 61);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_select_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.task_time_ampm, $event) || (ctx_r1.taskForm.task_time_ampm = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(28, \"option\", 62);\n    i0.ɵɵtext(29, \"AM\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"option\", 63);\n    i0.ɵɵtext(31, \"PM\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\", 10)(33, \"label\", 11);\n    i0.ɵɵtext(34, \"Task type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"select\", 64);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_select_ngModelChange_35_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.task_type, $event) || (ctx_r1.taskForm.task_type = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵtemplate(36, TaskListComponent_div_79_option_36_Template, 2, 2, \"option\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"div\", 10)(38, \"label\", 11);\n    i0.ɵɵtext(39, \"Phone number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"input\", 65);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_input_ngModelChange_40_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.phone_number, $event) || (ctx_r1.taskForm.phone_number = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(41, \"div\", 10)(42, \"label\", 11);\n    i0.ɵɵtext(43, \"Contact person\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(44, \"input\", 66);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_input_ngModelChange_44_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.contact_person, $event) || (ctx_r1.taskForm.contact_person = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(45, \"div\", 10)(46, \"label\", 11);\n    i0.ɵɵtext(47, \"Note (optional)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"textarea\", 67);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_div_79_Template_textarea_ngModelChange_48_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.taskForm.note, $event) || (ctx_r1.taskForm.note = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"div\", 68)(50, \"button\", 69);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_div_79_Template_button_click_50_listener() {\n      i0.ɵɵrestoreView(_r7);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeModal());\n    });\n    i0.ɵɵtext(51, \"CANCEL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"button\", 70);\n    i0.ɵɵtext(53, \"SAVE\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx_r1.taskForm.status === \"open\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx_r1.taskForm.status === \"closed\"));\n    i0.ɵɵadvance(8);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.entity_name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.task_date);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.task_time_hour);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.hours);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.task_time_minute);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.minutes);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.task_time_ampm);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.task_type);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.taskTypes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.phone_number);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.contact_person);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.taskForm.note);\n  }\n}\nvar TaskListComponent = /** @class */function () {\n  function TaskListComponent(taskService) {\n    this.taskService = taskService;\n    this.tasks = [];\n    this.taskTypes = [];\n    this.contactPersons = [];\n    this.loading = false;\n    this.showModal = false;\n    this.editingTask = null;\n    this.filters = {\n      entity_name: '',\n      task_type: '',\n      status: '',\n      contact_person: '',\n      task_date: '',\n      sort_by: 'date_created',\n      sort_order: undefined,\n      // Changed from 'desc' to undefined to resolve linter error\n      search_term: ''\n    };\n    this.taskForm = {\n      entity_name: '',\n      task_type: '',\n      task_date: '',\n      // Separate date field\n      task_time_hour: '12',\n      // Separate hour field for time picker\n      task_time_minute: '00',\n      // Separate minute field for time picker\n      task_time_ampm: 'PM',\n      // Separate AM/PM field for time picker\n      contact_person: '',\n      note: '',\n      status: 'open',\n      phone_number: '' // Added for new phone number field\n    };\n    this.hours = Array.from({\n      length: 12\n    }, function (_, i) {\n      return (i + 1).toString().padStart(2, '0');\n    });\n    this.minutes = ['00', '15', '30', '45'];\n    this.alert = null;\n  }\n  TaskListComponent.prototype.ngOnInit = function () {\n    this.loadTasks();\n    this.loadTaskTypes();\n    this.loadContactPersons();\n  };\n  TaskListComponent.prototype.loadTasks = function () {\n    var _this = this;\n    this.loading = true;\n    this.taskService.getTasks(this.filters).subscribe({\n      next: function (tasks) {\n        _this.tasks = tasks;\n        _this.loading = false;\n      },\n      error: function (error) {\n        _this.showAlert('error', 'Error loading tasks: ' + error.message);\n        _this.loading = false;\n      }\n    });\n  };\n  TaskListComponent.prototype.loadTaskTypes = function () {\n    var _this = this;\n    this.taskService.getTaskTypes().subscribe({\n      next: function (types) {\n        return _this.taskTypes = types;\n      },\n      error: function (error) {\n        return console.error('Error loading task types:', error);\n      }\n    });\n  };\n  TaskListComponent.prototype.loadContactPersons = function () {\n    var _this = this;\n    this.taskService.getContactPersons().subscribe({\n      next: function (persons) {\n        return _this.contactPersons = persons;\n      },\n      error: function (error) {\n        return console.error('Error loading contact persons:', error);\n      }\n    });\n  };\n  TaskListComponent.prototype.showCreateModal = function () {\n    this.editingTask = null;\n    this.taskForm = {\n      entity_name: '',\n      task_type: '',\n      task_date: '',\n      // Reset to empty\n      task_time_hour: '12',\n      task_time_minute: '00',\n      task_time_ampm: 'PM',\n      contact_person: '',\n      note: '',\n      status: 'open',\n      phone_number: ''\n    };\n    this.showModal = true;\n  };\n  TaskListComponent.prototype.editTask = function (task) {\n    this.editingTask = task;\n    var taskDateTime = new Date(task.task_time);\n    this.taskForm = {\n      entity_name: task.entity_name,\n      task_type: task.task_type,\n      task_date: taskDateTime.toISOString().slice(0, 10),\n      // Extract date\n      task_time_hour: this.formatHourForInput(taskDateTime),\n      // Extract hour\n      task_time_minute: this.formatMinuteForInput(taskDateTime),\n      // Extract minute\n      task_time_ampm: this.formatAmPmForInput(taskDateTime),\n      // Extract AM/PM\n      contact_person: task.contact_person,\n      note: task.note || '',\n      status: task.status,\n      phone_number: task.phone_number || '' // Populate phone number\n    };\n    this.showModal = true;\n  };\n  TaskListComponent.prototype.duplicateTask = function (task) {\n    this.editingTask = null; // Treat as a new task for duplication\n    var taskDateTime = new Date(task.task_time);\n    this.taskForm = {\n      entity_name: task.entity_name,\n      task_type: task.task_type,\n      task_date: taskDateTime.toISOString().slice(0, 10),\n      task_time_hour: this.formatHourForInput(taskDateTime),\n      task_time_minute: this.formatMinuteForInput(taskDateTime),\n      task_time_ampm: this.formatAmPmForInput(taskDateTime),\n      contact_person: task.contact_person,\n      note: task.note || '',\n      status: 'open',\n      // Default to open for duplicated tasks\n      phone_number: task.phone_number || ''\n    };\n    this.showModal = true;\n  };\n  TaskListComponent.prototype.saveTask = function () {\n    var _this = this;\n    var _a, _b, _c, _d, _e;\n    // Client-side validation\n    if (!((_a = this.taskForm.entity_name) === null || _a === void 0 ? void 0 : _a.trim())) {\n      this.showAlert('error', 'Entity name is required');\n      return;\n    }\n    if (!((_b = this.taskForm.task_type) === null || _b === void 0 ? void 0 : _b.trim())) {\n      this.showAlert('error', 'Task type is required');\n      return;\n    }\n    if (!this.taskForm.task_date) {\n      this.showAlert('error', 'Date is required');\n      return;\n    }\n    if (!this.taskForm.task_time_hour || !this.taskForm.task_time_minute || !this.taskForm.task_time_ampm) {\n      this.showAlert('error', 'Time is required');\n      return;\n    }\n    if (!((_c = this.taskForm.contact_person) === null || _c === void 0 ? void 0 : _c.trim())) {\n      this.showAlert('error', 'Contact person is required');\n      return;\n    }\n    // Construct full task_time from separate date and time components\n    var hour = parseInt(this.taskForm.task_time_hour, 10);\n    if (this.taskForm.task_time_ampm === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (this.taskForm.task_time_ampm === 'AM' && hour === 12) {\n      hour = 0; // Midnight\n    }\n    var fullTaskTime = new Date(\"\".concat(this.taskForm.task_date, \"T\").concat(hour.toString().padStart(2, '0'), \":\").concat(this.taskForm.task_time_minute, \":00\"));\n    // Past date validation\n    var now = new Date();\n    if (fullTaskTime < now) {\n      this.showAlert('error', 'Task due time cannot be in the past');\n      return;\n    }\n    var taskToSend = {\n      entity_name: this.taskForm.entity_name.trim(),\n      task_type: this.taskForm.task_type.trim(),\n      task_time: fullTaskTime.toISOString(),\n      contact_person: this.taskForm.contact_person.trim(),\n      note: ((_d = this.taskForm.note) === null || _d === void 0 ? void 0 : _d.trim()) || '',\n      status: this.taskForm.status,\n      phone_number: ((_e = this.taskForm.phone_number) === null || _e === void 0 ? void 0 : _e.trim()) || ''\n    };\n    if (this.editingTask) {\n      this.taskService.updateTask(this.editingTask.id, taskToSend).subscribe({\n        next: function () {\n          _this.showAlert('success', 'Task updated successfully');\n          _this.closeModal();\n          _this.loadTasks();\n        },\n        error: function (error) {\n          return _this.showAlert('error', 'Error updating task: ' + error.message);\n        }\n      });\n    } else {\n      this.taskService.createTask(taskToSend).subscribe({\n        next: function () {\n          _this.showAlert('success', 'Task created successfully');\n          _this.closeModal();\n          _this.loadTasks();\n          _this.loadTaskTypes();\n          _this.loadContactPersons();\n        },\n        error: function (error) {\n          return _this.showAlert('error', 'Error creating task: ' + error.message);\n        }\n      });\n    }\n  };\n  TaskListComponent.prototype.toggleStatus = function (task) {\n    var _this = this;\n    var newStatus = task.status === 'open' ? 'closed' : 'open';\n    this.taskService.updateTaskStatus(task.id, newStatus).subscribe({\n      next: function () {\n        _this.showAlert('success', \"Task status changed to \".concat(newStatus));\n        _this.loadTasks();\n      },\n      error: function (error) {\n        return _this.showAlert('error', 'Error updating task status: ' + error.message);\n      }\n    });\n  };\n  TaskListComponent.prototype.deleteTask = function (task) {\n    var _this = this;\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.taskService.deleteTask(task.id).subscribe({\n        next: function () {\n          _this.showAlert('success', 'Task deleted successfully');\n          _this.loadTasks();\n        },\n        error: function (error) {\n          return _this.showAlert('error', 'Error deleting task: ' + error.message);\n        }\n      });\n    }\n  };\n  TaskListComponent.prototype.closeModal = function () {\n    this.showModal = false;\n    this.editingTask = null;\n  };\n  TaskListComponent.prototype.clearFilters = function (filterKey) {\n    if (filterKey) {\n      if (filterKey === 'sort_order') {\n        this.filters[filterKey] = undefined; // Set to undefined for sort_order\n      } else {\n        this.filters[filterKey] = '';\n      }\n    } else {\n      this.filters = {\n        entity_name: '',\n        task_type: '',\n        status: '',\n        contact_person: '',\n        task_date: '',\n        sort_by: 'date_created',\n        sort_order: undefined,\n        search_term: ''\n      };\n    }\n    this.loadTasks();\n  };\n  TaskListComponent.prototype.showAlert = function (type, message) {\n    var _this = this;\n    this.alert = {\n      type: type,\n      message: message\n    };\n    setTimeout(function () {\n      return _this.alert = null;\n    }, 5000);\n  };\n  TaskListComponent.prototype.formatDate = function (dateString) {\n    return new Date(dateString).toLocaleDateString('en-GB', {\n      day: '2-digit',\n      month: 'short',\n      year: 'numeric'\n    });\n  };\n  TaskListComponent.prototype.formatTime = function (dateString) {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  TaskListComponent.prototype.formatHourForInput = function (date) {\n    var hour = date.getHours();\n    hour = hour % 12;\n    hour = hour ? hour : 12; // the hour '0' should be '12'\n    return hour.toString().padStart(2, '0');\n  };\n  TaskListComponent.prototype.formatMinuteForInput = function (date) {\n    return date.getMinutes().toString().padStart(2, '0');\n  };\n  TaskListComponent.prototype.formatAmPmForInput = function (date) {\n    return date.getHours() >= 12 ? 'PM' : 'AM';\n  };\n  TaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n    return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n  };\n  TaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskListComponent,\n    selectors: [[\"app-task-list\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 80,\n    vars: 16,\n    consts: [[1, \"card\"], [1, \"card-header\", 2, \"display\", \"flex\", \"justify-content\", \"space-between\", \"align-items\", \"center\"], [1, \"card-title\"], [2, \"display\", \"flex\", \"align-items\", \"center\", \"gap\", \"1rem\"], [1, \"search-bar\"], [\"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"active-filters\"], [\"class\", \"active-filter-badge\", 4, \"ngIf\"], [1, \"filters\", 2, \"display\", \"none\"], [1, \"form-group\"], [1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"Filter by entity name\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"open\"], [\"value\", \"closed\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"date_created\"], [\"value\", \"entity_name\"], [\"value\", \"task_type\"], [\"value\", \"task_time\"], [\"value\", \"contact_person\"], [\"value\", \"status\"], [\"value\", \"desc\"], [\"value\", \"asc\"], [1, \"actions\", 2, \"display\", \"none\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-warning\", 3, \"click\"], [\"class\", \"alert\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [\"class\", \"modal\", 3, \"click\", 4, \"ngIf\"], [1, \"active-filter-badge\"], [1, \"clear-filter\", 3, \"click\"], [3, \"value\"], [1, \"alert\", 3, \"ngClass\"], [1, \"loading\"], [1, \"table\"], [1, \"filter-icon\"], [4, \"ngFor\", \"ngForOf\"], [1, \"task-type-icon\", 3, \"ngClass\"], [1, \"status-badge\", 3, \"ngClass\"], [1, \"dropdown\"], [1, \"btn\", \"btn-options\"], [1, \"dropdown-content\"], [\"href\", \"#\", 3, \"click\"], [1, \"modal\", 3, \"click\"], [1, \"modal-content\", 3, \"click\"], [1, \"modal-header\"], [1, \"modal-title\"], [1, \"status-toggle\"], [3, \"click\", \"ngClass\"], [1, \"close\", 3, \"click\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"entity_name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-group\", \"date-time-group\"], [\"type\", \"date\", \"name\", \"task_date\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"task_time_hour\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"task_time_minute\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"task_time_ampm\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"AM\"], [\"value\", \"PM\"], [\"name\", \"task_type\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"name\", \"phone_number\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"name\", \"contact_person\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"note\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [2, \"display\", \"flex\", \"gap\", \"10px\", \"justify-content\", \"flex-end\", \"margin-top\", \"2rem\"], [\"type\", \"button\", 1, \"btn\", \"btn-cancel\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-save\"]],\n    template: function TaskListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"SALES LOG\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"input\", 5);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_6_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.search_term, $event) || (ctx.filters.search_term = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_7_listener() {\n          return ctx.showCreateModal();\n        });\n        i0.ɵɵtext(8, \"+ New Task\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵtemplate(10, TaskListComponent_span_10_Template, 4, 1, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 10)(13, \"label\", 11);\n        i0.ɵɵtext(14, \"Entity Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 12);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_15_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.entity_name, $event) || (ctx.filters.entity_name = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Task Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 13);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_19_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.task_type, $event) || (ctx.filters.task_type = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(20, \"option\", 14);\n        i0.ɵɵtext(21, \"All Types\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, TaskListComponent_option_22_Template, 2, 2, \"option\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 10)(24, \"label\", 11);\n        i0.ɵɵtext(25, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"select\", 13);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_26_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.status, $event) || (ctx.filters.status = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(27, \"option\", 14);\n        i0.ɵɵtext(28, \"All Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"option\", 16);\n        i0.ɵɵtext(30, \"Open\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"option\", 17);\n        i0.ɵɵtext(32, \"Closed\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"div\", 10)(34, \"label\", 11);\n        i0.ɵɵtext(35, \"Contact Person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"select\", 13);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_36_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.contact_person, $event) || (ctx.filters.contact_person = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(37, \"option\", 14);\n        i0.ɵɵtext(38, \"All Persons\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(39, TaskListComponent_option_39_Template, 2, 2, \"option\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 10)(41, \"label\", 11);\n        i0.ɵɵtext(42, \"Task Due Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"input\", 18);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_43_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.task_date, $event) || (ctx.filters.task_date = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 10)(45, \"label\", 11);\n        i0.ɵɵtext(46, \"Sort By\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"select\", 13);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_47_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.sort_by, $event) || (ctx.filters.sort_by = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(48, \"option\", 19);\n        i0.ɵɵtext(49, \"Date Created\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"option\", 20);\n        i0.ɵɵtext(51, \"Entity Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"option\", 21);\n        i0.ɵɵtext(53, \"Task Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"option\", 22);\n        i0.ɵɵtext(55, \"Task Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"option\", 23);\n        i0.ɵɵtext(57, \"Contact Person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"option\", 24);\n        i0.ɵɵtext(59, \"Status\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(60, \"div\", 10)(61, \"label\", 11);\n        i0.ɵɵtext(62, \"Sort Order\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"select\", 13);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function TaskListComponent_Template_select_ngModelChange_63_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.filters.sort_order, $event) || (ctx.filters.sort_order = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(64, \"option\", 25);\n        i0.ɵɵtext(65, \"Descending\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(66, \"option\", 26);\n        i0.ɵɵtext(67, \"Ascending\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(68, \"div\", 27)(69, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_69_listener() {\n          return ctx.loadTasks();\n        });\n        i0.ɵɵtext(70, \"Apply Filters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_71_listener() {\n          return ctx.showCreateModal();\n        });\n        i0.ɵɵtext(72, \"Create New Task\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"button\", 29);\n        i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_73_listener() {\n          return ctx.clearFilters();\n        });\n        i0.ɵɵtext(74, \"Clear Filters\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(75, TaskListComponent_div_75_Template, 2, 2, \"div\", 30)(76, TaskListComponent_div_76_Template, 2, 0, \"div\", 31)(77, TaskListComponent_table_77_Template, 35, 1, \"table\", 32)(78, TaskListComponent_div_78_Template, 2, 0, \"div\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(79, TaskListComponent_div_79_Template, 54, 18, \"div\", 33);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.search_term);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.filters.task_type);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.entity_name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.task_type);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskTypes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.status);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.contact_person);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contactPersons);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.task_date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.sort_by);\n        i0.ɵɵadvance(16);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.filters.sort_order);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.alert);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.tasks.length > 0);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.tasks.length === 0);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showModal);\n      }\n    },\n    dependencies: [common_1.CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, forms_1.FormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    encapsulation: 2\n  });\n  return TaskListComponent;\n}();\nexports.TaskListComponent = TaskListComponent;","map":{"version":3,"names":["common_1","require","forms_1","i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","TaskListComponent_span_10_Template_span_click_2_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","clearFilters","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","filters","task_type","ɵɵproperty","type_r3","ɵɵtextInterpolate","person_r4","alert","type","message","ɵɵelement","TaskListComponent_table_77_tr_34_Template_a_click_22_listener","$event","task_r6","_r5","$implicit","editTask","preventDefault","TaskListComponent_table_77_tr_34_Template_a_click_24_listener","duplicateTask","TaskListComponent_table_77_tr_34_Template_a_click_26_listener","toggleStatus","TaskListComponent_table_77_tr_34_Template_a_click_28_listener","deleteTask","formatDate","date_created","entity_name","toLowerCase","formatTime","task_time","contact_person","note","status","ɵɵtemplate","TaskListComponent_table_77_tr_34_Template","tasks","hour_r8","minute_r9","type_r10","TaskListComponent_div_79_Template_div_click_0_listener","_r7","closeModal","TaskListComponent_div_79_Template_div_click_1_listener","stopPropagation","TaskListComponent_div_79_Template_button_click_6_listener","taskForm","TaskListComponent_div_79_Template_button_click_8_listener","TaskListComponent_div_79_Template_button_click_10_listener","TaskListComponent_div_79_Template_form_ngSubmit_12_listener","saveTask","ɵɵtwoWayListener","TaskListComponent_div_79_Template_input_ngModelChange_16_listener","ɵɵtwoWayBindingSet","TaskListComponent_div_79_Template_input_ngModelChange_20_listener","task_date","TaskListComponent_div_79_Template_select_ngModelChange_23_listener","task_time_hour","TaskListComponent_div_79_option_24_Template","TaskListComponent_div_79_Template_select_ngModelChange_25_listener","task_time_minute","TaskListComponent_div_79_option_26_Template","TaskListComponent_div_79_Template_select_ngModelChange_27_listener","task_time_ampm","TaskListComponent_div_79_Template_select_ngModelChange_35_listener","TaskListComponent_div_79_option_36_Template","TaskListComponent_div_79_Template_input_ngModelChange_40_listener","phone_number","TaskListComponent_div_79_Template_input_ngModelChange_44_listener","TaskListComponent_div_79_Template_textarea_ngModelChange_48_listener","TaskListComponent_div_79_Template_button_click_50_listener","ɵɵpureFunction1","_c0","ɵɵtwoWayProperty","hours","minutes","taskTypes","TaskListComponent","taskService","contactPersons","loading","showModal","editingTask","sort_by","sort_order","undefined","search_term","Array","from","length","_","i","toString","padStart","prototype","ngOnInit","loadTasks","loadTaskTypes","loadContactPersons","_this","getTasks","subscribe","next","error","showAlert","getTaskTypes","types","console","getContactPersons","persons","showCreateModal","task","taskDateTime","Date","toISOString","slice","formatHourForInput","formatMinuteForInput","formatAmPmForInput","_a","trim","_b","_c","hour","parseInt","fullTaskTime","concat","now","taskToSend","_d","_e","updateTask","id","createTask","newStatus","updateTaskStatus","confirm","filterKey","setTimeout","dateString","toLocaleDateString","day","month","year","toLocaleTimeString","minute","hour12","date","getHours","getMinutes","ɵɵdirectiveInject","i1","TaskService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","TaskListComponent_Template_input_ngModelChange_6_listener","TaskListComponent_Template_button_click_7_listener","TaskListComponent_span_10_Template","TaskListComponent_Template_input_ngModelChange_15_listener","TaskListComponent_Template_select_ngModelChange_19_listener","TaskListComponent_option_22_Template","TaskListComponent_Template_select_ngModelChange_26_listener","TaskListComponent_Template_select_ngModelChange_36_listener","TaskListComponent_option_39_Template","TaskListComponent_Template_input_ngModelChange_43_listener","TaskListComponent_Template_select_ngModelChange_47_listener","TaskListComponent_Template_select_ngModelChange_63_listener","TaskListComponent_Template_button_click_69_listener","TaskListComponent_Template_button_click_71_listener","TaskListComponent_Template_button_click_73_listener","TaskListComponent_div_75_Template","TaskListComponent_div_76_Template","TaskListComponent_table_77_Template","TaskListComponent_div_78_Template","TaskListComponent_div_79_Template","CommonModule","i2","NgClass","NgForOf","NgIf","FormsModule","i3","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","encapsulation","exports"],"sources":["C:\\Users\\narra\\OneDrive\\Desktop\\Task2\\frontend\\src\\app\\task-list\\task-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TaskService } from '../services/task.service';\r\nimport { Task, TaskFilters } from '../models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"card\">\r\n      <!-- Card Header (Sales Log title, New Task button, Search Bar) -->\r\n      <div class=\"card-header\" style=\"display: flex; justify-content: space-between; align-items: center;\">\r\n        <h2 class=\"card-title\">SALES LOG</h2>\r\n        <div style=\"display: flex; align-items: center; gap: 1rem;\">\r\n          <div class=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search\" class=\"form-control\" [(ngModel)]=\"filters.search_term\">\r\n          </div>\r\n          <button class=\"btn btn-success\" (click)=\"showCreateModal()\">+ New Task</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Active Filters Display (e.g., Task Type: Call) -->\r\n      <div class=\"active-filters\">\r\n        <!-- This area will dynamically display active filters, like \"Task Type: Call\" -->\r\n        <span *ngIf=\"filters.task_type\" class=\"active-filter-badge\">Task Type: {{ filters.task_type }} <span class=\"clear-filter\" (click)=\"clearFilters('task_type')\">x</span></span>\r\n        <!-- Add similar badges for other active filters -->\r\n      </div>\r\n\r\n      <!-- Original Filters Section (hidden for now, will be replaced by integrated filtering) -->\r\n      <div class=\"filters\" style=\"display: none;\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Entity Name</label>\r\n          <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filters.entity_name\" placeholder=\"Filter by entity name\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Task Type</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"filters.task_type\">\r\n            <option value=\"\">All Types</option>\r\n            <option *ngFor=\"let type of taskTypes\" [value]=\"type\">{{ type }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Status</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"filters.status\">\r\n            <option value=\"\">All Status</option>\r\n            <option value=\"open\">Open</option>\r\n            <option value=\"closed\">Closed</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Contact Person</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"filters.contact_person\">\r\n            <option value=\"\">All Persons</option>\r\n            <option *ngFor=\"let person of contactPersons\" [value]=\"person\">{{ person }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Task Due Date</label>\r\n          <input type=\"date\" class=\"form-control\" [(ngModel)]=\"filters.task_date\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Sort By</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"filters.sort_by\">\r\n            <option value=\"date_created\">Date Created</option>\r\n            <option value=\"entity_name\">Entity Name</option>\r\n            <option value=\"task_type\">Task Type</option>\r\n            <option value=\"task_time\">Task Time</option>\r\n            <option value=\"contact_person\">Contact Person</option>\r\n            <option value=\"status\">Status</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">Sort Order</label>\r\n          <select class=\"form-control\" [(ngModel)]=\"filters.sort_order\">\r\n            <option value=\"desc\">Descending</option>\r\n            <option value=\"asc\">Ascending</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Actions (Moved into card-header or will be part of table actions) -->\r\n      <div class=\"actions\" style=\"display: none;\">\r\n        <button class=\"btn btn-primary\" (click)=\"loadTasks()\">Apply Filters</button>\r\n        <button class=\"btn btn-success\" (click)=\"showCreateModal()\">Create New Task</button>\r\n        <button class=\"btn btn-warning\" (click)=\"clearFilters()\">Clear Filters</button>\r\n      </div>\r\n\r\n      <!-- Alerts -->\r\n      <div *ngIf=\"alert\" class=\"alert\" [ngClass]=\"alert.type === 'success' ? 'alert-success' : 'alert-error'\">\r\n        {{ alert.message }}\r\n      </div>\r\n\r\n      <!-- Loading -->\r\n      <div *ngIf=\"loading\" class=\"loading\">Loading tasks...</div>\r\n\r\n      <!-- Task Table -->\r\n      <table *ngIf=\"!loading && tasks.length > 0\" class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date <span class=\"filter-icon\">📅</span></th>\r\n            <th>Entity Name <span class=\"filter-icon\">▼</span></th>\r\n            <th>Task Type <span class=\"filter-icon\">▼</span></th>\r\n            <th>Time <span class=\"filter-icon\">▼</span></th>\r\n            <th>Contact Person <span class=\"filter-icon\">▼</span></th>\r\n            <th>Notes <span class=\"filter-icon\">▼</span></th>\r\n            <th>Status <span class=\"filter-icon\">▼</span></th>\r\n            <th>Options</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- We will need to implement date grouping here later -->\r\n          <tr *ngFor=\"let task of tasks\">\r\n            <td>{{ formatDate(task.date_created) }}</td>\r\n            <td>{{ task.entity_name }}</td>\r\n            <td>\r\n              <span class=\"task-type-icon\" [ngClass]=\"'task-type-' + task.task_type.toLowerCase()\"></span>\r\n              {{ task.task_type }}\r\n            </td>\r\n            <td>{{ formatTime(task.task_time) }}</td>\r\n            <td>{{ task.contact_person }}</td>\r\n            <td>{{ task.note || '-' }}</td>\r\n            <td>\r\n              <span class=\"status-badge\" [ngClass]=\"'status-' + task.status\">\r\n                {{ task.status }}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <div class=\"dropdown\">\r\n                <button class=\"btn btn-options\">Options</button>\r\n                <div class=\"dropdown-content\">\r\n                  <a href=\"#\" (click)=\"editTask(task); $event.preventDefault();\">Edit</a>\r\n                  <a href=\"#\" (click)=\"duplicateTask(task); $event.preventDefault();\">Duplicate</a>\r\n                  <a href=\"#\" (click)=\"toggleStatus(task); $event.preventDefault();\">Change Status to {{ task.status === 'open' ? 'Closed' : 'Open' }}</a>\r\n                  <a href=\"#\" (click)=\"deleteTask(task); $event.preventDefault();\">Delete</a>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- No Tasks Message -->\r\n      <div *ngIf=\"!loading && tasks.length === 0\" class=\"loading\">\r\n        No tasks found. Create a new task to get started.\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Create/Edit Task Modal -->\r\n    <div *ngIf=\"showModal\" class=\"modal\" (click)=\"closeModal()\">\r\n      <div class=\"modal-content\" (click)=\"$event.stopPropagation()\">\r\n        <div class=\"modal-header\">\r\n          <h3 class=\"modal-title\">NEW TASK</h3>\r\n          <div class=\"status-toggle\">\r\n            <button [ngClass]=\"{'active': taskForm.status === 'open'}\" (click)=\"taskForm.status = 'open'\">Open</button>\r\n            <button [ngClass]=\"{'active': taskForm.status === 'closed'}\" (click)=\"taskForm.status = 'closed'\">Closed</button>\r\n          </div>\r\n          <button class=\"close\" (click)=\"closeModal()\">&times;</button>\r\n        </div>\r\n        \r\n        <form (ngSubmit)=\"saveTask()\">\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Entity name</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"taskForm.entity_name\" name=\"entity_name\" required>\r\n          </div>\r\n          \r\n          <div class=\"form-group date-time-group\">\r\n            <label class=\"form-label\">Date</label>\r\n            <input type=\"date\" class=\"form-control\" [(ngModel)]=\"taskForm.task_date\" name=\"task_date\" required>\r\n            <label class=\"form-label\">Time</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"taskForm.task_time_hour\" name=\"task_time_hour\" required>\r\n              <option *ngFor=\"let hour of hours\" [value]=\"hour\">{{ hour }}</option>\r\n            </select>\r\n            <select class=\"form-control\" [(ngModel)]=\"taskForm.task_time_minute\" name=\"task_time_minute\" required>\r\n              <option *ngFor=\"let minute of minutes\" [value]=\"minute\">{{ minute }}</option>\r\n            </select>\r\n            <select class=\"form-control\" [(ngModel)]=\"taskForm.task_time_ampm\" name=\"task_time_ampm\" required>\r\n              <option value=\"AM\">AM</option>\r\n              <option value=\"PM\">PM</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Task type</label>\r\n            <select class=\"form-control\" [(ngModel)]=\"taskForm.task_type\" name=\"task_type\" required>\r\n              <option *ngFor=\"let type of taskTypes\" [value]=\"type\">{{ type }}</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Phone number</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"taskForm.phone_number\" name=\"phone_number\">\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Contact person</label>\r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"taskForm.contact_person\" name=\"contact_person\" required>\r\n          </div>\r\n          \r\n          <div class=\"form-group\">\r\n            <label class=\"form-label\">Note (optional)</label>\r\n            <textarea class=\"form-control\" [(ngModel)]=\"taskForm.note\" name=\"note\" rows=\"3\"></textarea>\r\n          </div>\r\n          \r\n          <div style=\"display: flex; gap: 10px; justify-content: flex-end; margin-top: 2rem;\">\r\n            <button type=\"button\" class=\"btn btn-cancel\" (click)=\"closeModal()\">CANCEL</button>\r\n            <button type=\"submit\" class=\"btn btn-save\">SAVE</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class TaskListComponent implements OnInit {\r\n  tasks: Task[] = [];\r\n  taskTypes: string[] = [];\r\n  contactPersons: string[] = [];\r\n  loading = false;\r\n  showModal = false;\r\n  editingTask: Task | null = null;\r\n  \r\n  filters: TaskFilters = {\r\n    entity_name: '',\r\n    task_type: '',\r\n    status: '',\r\n    contact_person: '',\r\n    task_date: '',\r\n    sort_by: 'date_created',\r\n    sort_order: undefined, // Changed from 'desc' to undefined to resolve linter error\r\n    search_term: ''\r\n  };\r\n  \r\n  taskForm: any = {\r\n    entity_name: '',\r\n    task_type: '',\r\n    task_date: '', // Separate date field\r\n    task_time_hour: '12', // Separate hour field for time picker\r\n    task_time_minute: '00', // Separate minute field for time picker\r\n    task_time_ampm: 'PM', // Separate AM/PM field for time picker\r\n    contact_person: '',\r\n    note: '',\r\n    status: 'open',\r\n    phone_number: '' // Added for new phone number field\r\n  };\r\n\r\n  hours: string[] = Array.from({ length: 12 }, (_, i) => (i + 1).toString().padStart(2, '0'));\r\n  minutes: string[] = ['00', '15', '30', '45'];\r\n  \r\n  alert: { type: 'success' | 'error', message: string } | null = null;\r\n\r\n  constructor(private taskService: TaskService) {}\r\n\r\n  ngOnInit() {\r\n    this.loadTasks();\r\n    this.loadTaskTypes();\r\n    this.loadContactPersons();\r\n  }\r\n\r\n  loadTasks() {\r\n    this.loading = true;\r\n    this.taskService.getTasks(this.filters).subscribe({\r\n      next: (tasks) => {\r\n        this.tasks = tasks;\r\n        this.loading = false;\r\n      },\r\n      error: (error) => {\r\n        this.showAlert('error', 'Error loading tasks: ' + error.message);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadTaskTypes() {\r\n    this.taskService.getTaskTypes().subscribe({\r\n      next: (types) => this.taskTypes = types,\r\n      error: (error) => console.error('Error loading task types:', error)\r\n    });\r\n  }\r\n\r\n  loadContactPersons() {\r\n    this.taskService.getContactPersons().subscribe({\r\n      next: (persons) => this.contactPersons = persons,\r\n      error: (error) => console.error('Error loading contact persons:', error)\r\n    });\r\n  }\r\n\r\n  showCreateModal() {\r\n    this.editingTask = null;\r\n    this.taskForm = {\r\n      entity_name: '',\r\n      task_type: '',\r\n      task_date: '', // Reset to empty\r\n      task_time_hour: '12',\r\n      task_time_minute: '00',\r\n      task_time_ampm: 'PM',\r\n      contact_person: '',\r\n      note: '',\r\n      status: 'open',\r\n      phone_number: ''\r\n    };\r\n    this.showModal = true;\r\n  }\r\n\r\n  editTask(task: Task) {\r\n    this.editingTask = task;\r\n    const taskDateTime = new Date(task.task_time);\r\n    this.taskForm = {\r\n      entity_name: task.entity_name,\r\n      task_type: task.task_type,\r\n      task_date: taskDateTime.toISOString().slice(0, 10), // Extract date\r\n      task_time_hour: this.formatHourForInput(taskDateTime), // Extract hour\r\n      task_time_minute: this.formatMinuteForInput(taskDateTime), // Extract minute\r\n      task_time_ampm: this.formatAmPmForInput(taskDateTime), // Extract AM/PM\r\n      contact_person: task.contact_person,\r\n      note: task.note || '',\r\n      status: task.status,\r\n      phone_number: task.phone_number || '' // Populate phone number\r\n    };\r\n    this.showModal = true;\r\n  }\r\n\r\n  duplicateTask(task: Task) {\r\n    this.editingTask = null; // Treat as a new task for duplication\r\n    const taskDateTime = new Date(task.task_time);\r\n    this.taskForm = {\r\n      entity_name: task.entity_name,\r\n      task_type: task.task_type,\r\n      task_date: taskDateTime.toISOString().slice(0, 10),\r\n      task_time_hour: this.formatHourForInput(taskDateTime),\r\n      task_time_minute: this.formatMinuteForInput(taskDateTime),\r\n      task_time_ampm: this.formatAmPmForInput(taskDateTime),\r\n      contact_person: task.contact_person,\r\n      note: task.note || '',\r\n      status: 'open', // Default to open for duplicated tasks\r\n      phone_number: task.phone_number || ''\r\n    };\r\n    this.showModal = true;\r\n  }\r\n\r\n  saveTask() {\r\n    // Client-side validation\r\n    if (!this.taskForm.entity_name?.trim()) { this.showAlert('error', 'Entity name is required'); return; }\r\n    if (!this.taskForm.task_type?.trim()) { this.showAlert('error', 'Task type is required'); return; }\r\n    if (!this.taskForm.task_date) { this.showAlert('error', 'Date is required'); return; }\r\n    if (!this.taskForm.task_time_hour || !this.taskForm.task_time_minute || !this.taskForm.task_time_ampm) { this.showAlert('error', 'Time is required'); return; }\r\n    if (!this.taskForm.contact_person?.trim()) { this.showAlert('error', 'Contact person is required'); return; }\r\n\r\n    // Construct full task_time from separate date and time components\r\n    let hour = parseInt(this.taskForm.task_time_hour, 10);\r\n    if (this.taskForm.task_time_ampm === 'PM' && hour !== 12) {\r\n      hour += 12;\r\n    } else if (this.taskForm.task_time_ampm === 'AM' && hour === 12) {\r\n      hour = 0; // Midnight\r\n    }\r\n    const fullTaskTime = new Date(`${this.taskForm.task_date}T${hour.toString().padStart(2, '0')}:${this.taskForm.task_time_minute}:00`);\r\n\r\n    // Past date validation\r\n    const now = new Date();\r\n    if (fullTaskTime < now) {\r\n      this.showAlert('error', 'Task due time cannot be in the past');\r\n      return;\r\n    }\r\n\r\n    const taskToSend = {\r\n      entity_name: this.taskForm.entity_name.trim(),\r\n      task_type: this.taskForm.task_type.trim(),\r\n      task_time: fullTaskTime.toISOString(),\r\n      contact_person: this.taskForm.contact_person.trim(),\r\n      note: this.taskForm.note?.trim() || '',\r\n      status: this.taskForm.status,\r\n      phone_number: this.taskForm.phone_number?.trim() || ''\r\n    };\r\n\r\n    if (this.editingTask) {\r\n      this.taskService.updateTask(this.editingTask.id!, taskToSend).subscribe({\r\n        next: () => {\r\n          this.showAlert('success', 'Task updated successfully');\r\n          this.closeModal();\r\n          this.loadTasks();\r\n        },\r\n        error: (error) => this.showAlert('error', 'Error updating task: ' + error.message)\r\n      });\r\n    } else {\r\n      this.taskService.createTask(taskToSend).subscribe({\r\n        next: () => {\r\n          this.showAlert('success', 'Task created successfully');\r\n          this.closeModal();\r\n          this.loadTasks();\r\n          this.loadTaskTypes();\r\n          this.loadContactPersons();\r\n        },\r\n        error: (error) => this.showAlert('error', 'Error creating task: ' + error.message)\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleStatus(task: Task) {\r\n    const newStatus = task.status === 'open' ? 'closed' : 'open';\r\n    this.taskService.updateTaskStatus(task.id!, newStatus).subscribe({\r\n      next: () => {\r\n        this.showAlert('success', `Task status changed to ${newStatus}`);\r\n        this.loadTasks();\r\n      },\r\n      error: (error) => this.showAlert('error', 'Error updating task status: ' + error.message)\r\n    });\r\n  }\r\n\r\n  deleteTask(task: Task) {\r\n    if (confirm('Are you sure you want to delete this task?')) {\r\n      this.taskService.deleteTask(task.id!).subscribe({\r\n        next: () => {\r\n          this.showAlert('success', 'Task deleted successfully');\r\n          this.loadTasks();\r\n        },\r\n        error: (error) => this.showAlert('error', 'Error deleting task: ' + error.message)\r\n      });\r\n    }\r\n  }\r\n\r\n  closeModal() {\r\n    this.showModal = false;\r\n    this.editingTask = null;\r\n  }\r\n\r\n  clearFilters(filterKey?: keyof TaskFilters) {\r\n    if (filterKey) {\r\n      if (filterKey === 'sort_order') {\r\n        this.filters[filterKey] = undefined; // Set to undefined for sort_order\r\n      } else {\r\n        this.filters[filterKey] = '';\r\n      }\r\n    } else {\r\n      this.filters = {\r\n        entity_name: '',\r\n        task_type: '',\r\n        status: '',\r\n        contact_person: '',\r\n        task_date: '',\r\n        sort_by: 'date_created',\r\n        sort_order: undefined,\r\n        search_term: ''\r\n      };\r\n    }\r\n    this.loadTasks();\r\n  }\r\n\r\n  showAlert(type: 'success' | 'error', message: string) {\r\n    this.alert = { type, message };\r\n    setTimeout(() => this.alert = null, 5000);\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    return new Date(dateString).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: 'numeric' });\r\n  }\r\n\r\n  formatTime(dateString: string): string {\r\n    return new Date(dateString).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true });\r\n  }\r\n\r\n  private formatHourForInput(date: Date): string {\r\n    let hour = date.getHours();\r\n    hour = hour % 12;\r\n    hour = hour ? hour : 12; // the hour '0' should be '12'\r\n    return hour.toString().padStart(2, '0');\r\n  }\r\n\r\n  private formatMinuteForInput(date: Date): string {\r\n    return date.getMinutes().toString().padStart(2, '0');\r\n  }\r\n\r\n  private formatAmPmForInput(date: Date): string {\r\n    return date.getHours() >= 12 ? 'PM' : 'AM';\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}