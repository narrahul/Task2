{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TaskService = void 0;\nvar http_1 = require(\"@angular/common/http\");\nvar environment_1 = require(\"../../environments/environment\"); // ✅ import environment\nvar i0 = require(\"@angular/core\");\nvar i1 = require(\"@angular/common/http\");\nvar TaskService = /** @class */function () {\n  function TaskService(http) {\n    this.http = http;\n    this.apiUrl = environment_1.environment.apiUrl; // ✅ use environment variable\n  }\n  TaskService.prototype.getTasks = function (filters) {\n    var params = new http_1.HttpParams();\n    if (filters) {\n      Object.keys(filters).forEach(function (key) {\n        var value = filters[key];\n        if (value && value.toString().trim() !== '') {\n          params = params.set(key, value.toString().trim());\n        }\n      });\n    }\n    return this.http.get(\"\".concat(this.apiUrl, \"/tasks\"), {\n      params: params\n    });\n  };\n  TaskService.prototype.createTask = function (task) {\n    return this.http.post(\"\".concat(this.apiUrl, \"/tasks\"), task);\n  };\n  TaskService.prototype.updateTask = function (taskId, task) {\n    return this.http.put(\"\".concat(this.apiUrl, \"/tasks/\").concat(taskId), task);\n  };\n  TaskService.prototype.updateTaskStatus = function (taskId, status) {\n    return this.http.patch(\"\".concat(this.apiUrl, \"/tasks/\").concat(taskId, \"/status\"), {\n      status: status\n    });\n  };\n  TaskService.prototype.deleteTask = function (taskId) {\n    return this.http.delete(\"\".concat(this.apiUrl, \"/tasks/\").concat(taskId));\n  };\n  TaskService.prototype.getTaskTypes = function () {\n    return this.http.get(\"\".concat(this.apiUrl, \"/task-types\"));\n  };\n  TaskService.prototype.getContactPersons = function () {\n    return this.http.get(\"\".concat(this.apiUrl, \"/contact-persons\"));\n  };\n  TaskService.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  TaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n  return TaskService;\n}();\nexports.TaskService = TaskService;","map":{"version":3,"names":["http_1","require","environment_1","TaskService","http","apiUrl","environment","prototype","getTasks","filters","params","HttpParams","Object","keys","forEach","key","value","toString","trim","set","get","concat","createTask","task","post","updateTask","taskId","put","updateTaskStatus","status","patch","deleteTask","delete","getTaskTypes","getContactPersons","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","exports"],"sources":["C:\\Users\\narra\\OneDrive\\Desktop\\Task2\\frontend\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Task, TaskFilters } from '../models/task.model';\r\nimport { environment } from '../../environments/environment';  // ✅ import environment\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  private apiUrl = environment.apiUrl;   // ✅ use environment variable\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTasks(filters?: TaskFilters): Observable<Task[]> {\r\n    let params = new HttpParams();\r\n    \r\n    if (filters) {\r\n      Object.keys(filters).forEach(key => {\r\n        const value = filters[key as keyof TaskFilters];\r\n        if (value && value.toString().trim() !== '') {\r\n          params = params.set(key, value.toString().trim());\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.http.get<Task[]>(`${this.apiUrl}/tasks`, { params });\r\n  }\r\n\r\n  createTask(task: Omit<Task, 'id' | 'date_created'>): Observable<Task> {\r\n    return this.http.post<Task>(`${this.apiUrl}/tasks`, task);\r\n  }\r\n\r\n  updateTask(taskId: number, task: Partial<Task>): Observable<Task> {\r\n    return this.http.put<Task>(`${this.apiUrl}/tasks/${taskId}`, task);\r\n  }\r\n\r\n  updateTaskStatus(taskId: number, status: 'open' | 'closed'): Observable<Task> {\r\n    return this.http.patch<Task>(`${this.apiUrl}/tasks/${taskId}/status`, { status });\r\n  }\r\n\r\n  deleteTask(taskId: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/tasks/${taskId}`);\r\n  }\r\n\r\n  getTaskTypes(): Observable<string[]> {\r\n    return this.http.get<string[]>(`${this.apiUrl}/task-types`);\r\n  }\r\n\r\n  getContactPersons(): Observable<string[]> {\r\n    return this.http.get<string[]>(`${this.apiUrl}/contact-persons`);\r\n  }\r\n}\r\n"],"mappings":";;;;;;AACA,IAAAA,MAAA,GAAAC,OAAA;AAGA,IAAAC,aAAA,GAAAD,OAAA,mCAA6D,CAAE;;;AAE/D,IAAAE,WAAA;EAME,SAAAA,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAGH,aAAA,CAAAI,WAAW,CAACD,MAAM,CAAC,CAAG;EAEC;EAExCF,WAAA,CAAAI,SAAA,CAAAC,QAAQ,GAAR,UAASC,OAAqB;IAC5B,IAAIC,MAAM,GAAG,IAAIV,MAAA,CAAAW,UAAU,EAAE;IAE7B,IAAIF,OAAO,EAAE;MACXG,MAAM,CAACC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAC,UAAAC,GAAG;QAC9B,IAAMC,KAAK,GAAGP,OAAO,CAACM,GAAwB,CAAC;QAC/C,IAAIC,KAAK,IAAIA,KAAK,CAACC,QAAQ,EAAE,CAACC,IAAI,EAAE,KAAK,EAAE,EAAE;UAC3CR,MAAM,GAAGA,MAAM,CAACS,GAAG,CAACJ,GAAG,EAAEC,KAAK,CAACC,QAAQ,EAAE,CAACC,IAAI,EAAE,CAAC;QACnD;MACF,CAAC,CAAC;IACJ;IAEA,OAAO,IAAI,CAACd,IAAI,CAACgB,GAAG,CAAS,GAAAC,MAAA,CAAG,IAAI,CAAChB,MAAM,WAAQ,EAAE;MAAEK,MAAM,EAAAA;IAAA,CAAE,CAAC;EAClE,CAAC;EAEDP,WAAA,CAAAI,SAAA,CAAAe,UAAU,GAAV,UAAWC,IAAuC;IAChD,OAAO,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAO,GAAAH,MAAA,CAAG,IAAI,CAAChB,MAAM,WAAQ,EAAEkB,IAAI,CAAC;EAC3D,CAAC;EAEDpB,WAAA,CAAAI,SAAA,CAAAkB,UAAU,GAAV,UAAWC,MAAc,EAAEH,IAAmB;IAC5C,OAAO,IAAI,CAACnB,IAAI,CAACuB,GAAG,CAAO,GAAAN,MAAA,CAAG,IAAI,CAAChB,MAAM,aAAAgB,MAAA,CAAUK,MAAM,CAAE,EAAEH,IAAI,CAAC;EACpE,CAAC;EAEDpB,WAAA,CAAAI,SAAA,CAAAqB,gBAAgB,GAAhB,UAAiBF,MAAc,EAAEG,MAAyB;IACxD,OAAO,IAAI,CAACzB,IAAI,CAAC0B,KAAK,CAAO,GAAAT,MAAA,CAAG,IAAI,CAAChB,MAAM,aAAAgB,MAAA,CAAUK,MAAM,YAAS,EAAE;MAAEG,MAAM,EAAAA;IAAA,CAAE,CAAC;EACnF,CAAC;EAED1B,WAAA,CAAAI,SAAA,CAAAwB,UAAU,GAAV,UAAWL,MAAc;IACvB,OAAO,IAAI,CAACtB,IAAI,CAAC4B,MAAM,CAAC,GAAAX,MAAA,CAAG,IAAI,CAAChB,MAAM,aAAAgB,MAAA,CAAUK,MAAM,CAAE,CAAC;EAC3D,CAAC;EAEDvB,WAAA,CAAAI,SAAA,CAAA0B,YAAY,GAAZ;IACE,OAAO,IAAI,CAAC7B,IAAI,CAACgB,GAAG,CAAW,GAAAC,MAAA,CAAG,IAAI,CAAChB,MAAM,gBAAa,CAAC;EAC7D,CAAC;EAEDF,WAAA,CAAAI,SAAA,CAAA2B,iBAAiB,GAAjB;IACE,OAAO,IAAI,CAAC9B,IAAI,CAACgB,GAAG,CAAW,GAAAC,MAAA,CAAG,IAAI,CAAChB,MAAM,qBAAkB,CAAC;EAClE,CAAC;;qBA1CUF,WAAW,EAAAgC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAXnC,WAAW;IAAAoC,OAAA,EAAXpC,WAAW,CAAAqC,IAAA;IAAAC,UAAA,EAFV;EAAM;oBAPpB;CAoDC,CA9CD;AAGaC,OAAA,CAAAvC,WAAA,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}