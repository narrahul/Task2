{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl;\n    }\n    getTasks(filters) {\n      let params = new HttpParams();\n      if (filters) {\n        Object.keys(filters).forEach(key => {\n          const value = filters[key];\n          if (value && value.toString().trim() !== '') {\n            params = params.set(key, value.toString().trim());\n          }\n        });\n      }\n      return this.http.get(`${this.apiUrl}/tasks`, {\n        params\n      });\n    }\n    createTask(task) {\n      return this.http.post(`${this.apiUrl}/tasks`, task);\n    }\n    updateTask(taskId, task) {\n      return this.http.put(`${this.apiUrl}/tasks/${taskId}`, task);\n    }\n    updateTaskStatus(taskId, status) {\n      return this.http.patch(`${this.apiUrl}/tasks/${taskId}/status`, {\n        status\n      });\n    }\n    deleteTask(taskId) {\n      return this.http.delete(`${this.apiUrl}/tasks/${taskId}`);\n    }\n    getTaskTypes() {\n      console.log('Fetching task types from:', `${this.apiUrl}/task-types`);\n      return this.http.get(`${this.apiUrl}/task-types`);\n    }\n    getContactPersons() {\n      return this.http.get(`${this.apiUrl}/contact-persons`);\n    }\n    static {\n      this.ɵfac = function TaskService_Factory(t) {\n        return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: TaskService,\n        factory: TaskService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return TaskService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}